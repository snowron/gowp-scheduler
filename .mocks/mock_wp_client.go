// Code generated by MockGen. DO NOT EDIT.
// Source: client/wp_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChatClient is a mock of ChatClient interface.
type MockChatClient struct {
	ctrl     *gomock.Controller
	recorder *MockChatClientMockRecorder
}

// MockChatClientMockRecorder is the mock recorder for MockChatClient.
type MockChatClientMockRecorder struct {
	mock *MockChatClient
}

// NewMockChatClient creates a new mock instance.
func NewMockChatClient(ctrl *gomock.Controller) *MockChatClient {
	mock := &MockChatClient{ctrl: ctrl}
	mock.recorder = &MockChatClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChatClient) EXPECT() *MockChatClientMockRecorder {
	return m.recorder
}

// CreateConnection mocks base method.
func (m *MockChatClient) CreateConnection() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConnection")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateConnection indicates an expected call of CreateConnection.
func (mr *MockChatClientMockRecorder) CreateConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnection", reflect.TypeOf((*MockChatClient)(nil).CreateConnection))
}

// SendMessage mocks base method.
func (m *MockChatClient) SendMessage(message, number string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMessage", message, number)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MockChatClientMockRecorder) SendMessage(message, number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockChatClient)(nil).SendMessage), message, number)
}
